package com.vabv.crm.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleAllPropertiesEquals(Vehicle expected, Vehicle actual) {
        assertVehicleAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleAllUpdatablePropertiesEquals(Vehicle expected, Vehicle actual) {
        assertVehicleUpdatableFieldsEquals(expected, actual);
        assertVehicleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleAutoGeneratedPropertiesEquals(Vehicle expected, Vehicle actual) {
        assertThat(actual)
            .as("Verify Vehicle auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUpdatableFieldsEquals(Vehicle expected, Vehicle actual) {
        assertThat(actual)
            .as("Verify Vehicle relevant properties")
            .satisfies(a -> assertThat(a.getLicensePlate()).as("check licensePlate").isEqualTo(expected.getLicensePlate()))
            .satisfies(a -> assertThat(a.getModel()).as("check model").isEqualTo(expected.getModel()))
            .satisfies(a -> assertThat(a.getBrand()).as("check brand").isEqualTo(expected.getBrand()))
            .satisfies(a -> assertThat(a.getFabricationDate()).as("check fabricationDate").isEqualTo(expected.getFabricationDate()))
            .satisfies(a -> assertThat(a.getModelYear()).as("check modelYear").isEqualTo(expected.getModelYear()))
            .satisfies(a -> assertThat(a.getColor()).as("check color").isEqualTo(expected.getColor()))
            .satisfies(a -> assertThat(a.getRenavam()).as("check renavam").isEqualTo(expected.getRenavam()))
            .satisfies(a -> assertThat(a.getFuelType()).as("check fuelType").isEqualTo(expected.getFuelType()))
            .satisfies(a -> assertThat(a.getChassiNumber()).as("check chassiNumber").isEqualTo(expected.getChassiNumber()))
            .satisfies(a -> assertThat(a.getCurrentMileage()).as("check currentMileage").isEqualTo(expected.getCurrentMileage()))
            .satisfies(a ->
                assertThat(a.getLastMaintenanceDate()).as("check lastMaintenanceDate").isEqualTo(expected.getLastMaintenanceDate())
            )
            .satisfies(a ->
                assertThat(a.getLastMaintenanceMileage()).as("check lastMaintenanceMileage").isEqualTo(expected.getLastMaintenanceMileage())
            )
            .satisfies(a ->
                assertThat(a.getNextMaintenanceDate()).as("check nextMaintenanceDate").isEqualTo(expected.getNextMaintenanceDate())
            )
            .satisfies(a ->
                assertThat(a.getNextMaintenanceMileage()).as("check nextMaintenanceMileage").isEqualTo(expected.getNextMaintenanceMileage())
            )
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()))
            .satisfies(a -> assertThat(a.getLastModifiedBy()).as("check lastModifiedBy").isEqualTo(expected.getLastModifiedBy()))
            .satisfies(a -> assertThat(a.getLastModifiedDate()).as("check lastModifiedDate").isEqualTo(expected.getLastModifiedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUpdatableRelationshipsEquals(Vehicle expected, Vehicle actual) {
        assertThat(actual)
            .as("Verify Vehicle relationships")
            .satisfies(a -> assertThat(a.getClient()).as("check client").isEqualTo(expected.getClient()));
    }
}
